// switch to kernel stack
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
alias userSP R1;
userSP = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 15 + 9] = 21;

if (([SYSTEM_STATUS_TABLE + 1] != 1) || ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 3] != 1)) then 
    [[PTBR + 2 * (userSP-1)/512] * 512 + ((userSP-1)%512)] = -1;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 15 + 9] = 0;
    SP = userSP;
    ireturn;
endif;
// inode table
multipush(R1, R2);
    R1 = 1;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = 59;
    R4 = 3;
    call MOD_4;
multipop(R1, R2);
multipush(R1, R2);
    R1 = 1;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = 60;
    R4 = 4;
    call MOD_4;
multipop(R1, R2);

// Disk Free List
multipush(R1, R2);
    R1 = 1;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = 61;
    R4 = 2;
    call MOD_4;
multipop(R1, R2);

// Root File
multipush(R1, R2);
    R1 = 1;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = 62;
    R4 = 5;
    call MOD_4;
multipop(R1, R2);
halt;