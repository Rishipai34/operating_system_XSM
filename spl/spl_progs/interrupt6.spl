[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 7;
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;
alias filedescriptor R1;
alias physicalpagenumber R2;
alias offset R3;
alias filedescriptoradd R4;
physicalpagenumber = [PTBR + 2 * ((userSP - 4)/512)];
offset = (userSP - 4) % 512;
filedescriptoradd = physicalpagenumber * 512 + offset;
filedescriptor = [filedescriptoradd];
if (filedescriptor != -1 ) then 
    [[PTBR + 2 * (userSP -1)/512] * 512 + (userSP - 1)%512] = -1;
else 
    alias word R5;
    word = [[PTBR + 2 * (userSP - 3)/512 ] * 512 + ((userSP - 3) % 512)];
    multipush(R0, R1, R2, R3, R4, R5);
    R1 = 4;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = word;
    call MOD_4;
    multipop(R0, R1, R2, R3, R4, R5);
    [[PTBR + 2 * (userSP -1)/512] * 512 + ((userSP - 1)%512)] = 0;
endif ;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP = userSP;
ireturn;